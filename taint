kubectl taint nodes node1 key=value:NoSchedule

Taint-effect: NoSchedule,PreferNoSchedule, NoExecute

places a taint on node node1.
The taint has key key, value value, and taint effect NoSchedule. 

This means that no pod will be able to schedule onto node1 unless it has a matching toleration.
<b>Taints prevents other pods to run on the marked nodes if they do not have the right tolleration, 
however taints and tollerations does not guarantie that the pods will only prefers these nodes</b>

NodeAffinity will mark some nodes, and the pods with nodeaffinity will run on these nodes, however it 
does not guarantee that other pods without nodeaffinity will not run on these nodes.


Note: Taint is the opposite of NodeAffinity,
however it does not guarantee that the pod to run in a particular node, it is the opposite logic,
you basically prevent a pod to run on a particular node, since it tells a node to accept pods that 
have only a particular tolleration

One example of usage: by default the master nodes have the taint "NoSchedule" applied



apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    env: test
spec:
  containers:
  - name: nginx
    image: nginx
    imagePullPolicy: IfNotPresent
  tolerations:
  - key: "example-key"
    operator: "Exists"
    effect: "NoSchedule"

